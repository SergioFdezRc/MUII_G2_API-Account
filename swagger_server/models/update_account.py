# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UpdateAccount(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, username: str=None, old_password: str=None, new_password: str=None):  # noqa: E501
        """UpdateAccount - a model defined in Swagger

        :param username: The username of this UpdateAccount.  # noqa: E501
        :type username: str
        :param old_password: The old_password of this UpdateAccount.  # noqa: E501
        :type old_password: str
        :param new_password: The new_password of this UpdateAccount.  # noqa: E501
        :type new_password: str
        """
        self.swagger_types = {
            'username': str,
            'old_password': str,
            'new_password': str
        }

        self.attribute_map = {
            'username': 'username',
            'old_password': 'old_password',
            'new_password': 'new_password'
        }
        self._username = username
        self._old_password = old_password
        self._new_password = new_password

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateAccount of this UpdateAccount.  # noqa: E501
        :rtype: UpdateAccount
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """Gets the username of this UpdateAccount.


        :return: The username of this UpdateAccount.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this UpdateAccount.


        :param username: The username of this UpdateAccount.
        :type username: str
        """

        self._username = username

    @property
    def old_password(self) -> str:
        """Gets the old_password of this UpdateAccount.


        :return: The old_password of this UpdateAccount.
        :rtype: str
        """
        return self._old_password

    @old_password.setter
    def old_password(self, old_password: str):
        """Sets the old_password of this UpdateAccount.


        :param old_password: The old_password of this UpdateAccount.
        :type old_password: str
        """

        self._old_password = old_password

    @property
    def new_password(self) -> str:
        """Gets the new_password of this UpdateAccount.


        :return: The new_password of this UpdateAccount.
        :rtype: str
        """
        return self._new_password

    @new_password.setter
    def new_password(self, new_password: str):
        """Sets the new_password of this UpdateAccount.


        :param new_password: The new_password of this UpdateAccount.
        :type new_password: str
        """

        self._new_password = new_password
